<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.test.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.test.model.User">
    <constructor>
      <idArg column="userid" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="username" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="PASSWORD" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="salt" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="createdate" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    userid, username, PASSWORD, salt, createdate
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_sys_user
    where userid = #{userid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_sys_user
    where userid = #{userid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.test.model.User">
    insert into t_sys_user (userid, username, PASSWORD, 
      salt, createdate)
    values (#{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{salt,jdbcType=VARCHAR}, #{createdate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.test.model.User">
    insert into t_sys_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        userid,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        PASSWORD,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="createdate != null">
        createdate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null">
        #{createdate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.test.model.User">
    update t_sys_user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null">
        createdate = #{createdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where userid = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.test.model.User">
    update t_sys_user
    set username = #{username,jdbcType=VARCHAR},
      PASSWORD = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      createdate = #{createdate,jdbcType=TIMESTAMP}
    where userid = #{userid,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.test.model.User">
    <constructor>
      <idArg column="roleid" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="rolename" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="description" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    roleid, rolename, description
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_sys_role
    where roleid = #{roleid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_sys_role
    where roleid = #{roleid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.test.model.User">
    insert into t_sys_role (roleid, rolename, description
      )
    values (#{roleid,jdbcType=INTEGER}, #{rolename,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.test.model.User">
    insert into t_sys_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleid != null">
        roleid,
      </if>
      <if test="rolename != null">
        rolename,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleid != null">
        #{roleid,jdbcType=INTEGER},
      </if>
      <if test="rolename != null">
        #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.test.model.User">
    update t_sys_role
    <set>
      <if test="rolename != null">
        rolename = #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
    </set>
    where roleid = #{roleid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.test.model.User">
    update t_sys_role
    set rolename = #{rolename,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR}
    where roleid = #{roleid,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.test.model.User">
    <constructor>
      <idArg column="perid" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="pername" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="pid" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="permission" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    perid, pername, pid, permission
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_sys_permission
    where perid = #{perid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_sys_permission
    where perid = #{perid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.test.model.User">
    insert into t_sys_permission (perid, pername, pid, 
      permission)
    values (#{perid,jdbcType=INTEGER}, #{pername,jdbcType=VARCHAR}, #{pid,jdbcType=INTEGER}, 
      #{permission,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.test.model.User">
    insert into t_sys_permission
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="perid != null">
        perid,
      </if>
      <if test="pername != null">
        pername,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="permission != null">
        permission,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="perid != null">
        #{perid,jdbcType=INTEGER},
      </if>
      <if test="pername != null">
        #{pername,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="permission != null">
        #{permission,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.test.model.User">
    update t_sys_permission
    <set>
      <if test="pername != null">
        pername = #{pername,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="permission != null">
        permission = #{permission,jdbcType=VARCHAR},
      </if>
    </set>
    where perid = #{perid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.test.model.User">
    update t_sys_permission
    set pername = #{pername,jdbcType=VARCHAR},
      pid = #{pid,jdbcType=INTEGER},
      permission = #{permission,jdbcType=VARCHAR}
    where perid = #{perid,jdbcType=INTEGER}
  </update>
</mapper>